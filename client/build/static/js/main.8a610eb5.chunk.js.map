{"version":3,"sources":["Navbar.js","Task.js","TaskList.js","Board.js","Modal.js","App.js","index.js"],"names":["Navbar","className","to","Task","item","index","useState","showDetails","setShowDetails","onClick","draggableId","id","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","userSelect","margin","minHeight","title","description","TaskList","data","name","droppableId","droppableProps","background","isDraggingOver","items","map","placeholder","Board","newTask","lists","columns","setColumns","task","setTask","console","log","useEffect","fetch","method","headers","body","JSON","stringify","then","res","json","catch","error","onDragEnd","result","destination","source","sourceColumn","destColumn","sourceItems","destItems","splice","removed","column","copiedItems","Object","entries","columnId","Modal","open","onClose","onSubmit","setTitle","setDescription","uuid","ReactDom","createPortal","type","required","value","onChange","e","target","length","submit","validateForm","document","getElementById","App","openModal","setOpenModal","modalData","setModalData","setLists","zIndex","ReactDOM","render","StrictMode"],"mappings":"+RAeeA,EAbA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,0CACA,qBAAKA,UAAU,QAAf,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEJ,4B,uCCiCGC,G,MAtCF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAAW,EACUC,oBAAS,GADnB,mBACrBC,EADqB,KACRC,EADQ,KAEtBC,EAAU,kBAAMD,GAAgBD,IAEtC,OACI,cAAC,IAAD,CAAyBG,YAAaN,EAAKO,GAAIN,MAAOA,EAAtD,SACK,SAACO,EAAUC,GACR,OACI,yDAAKC,IAAKF,EAASG,UAAcH,EAASI,gBAAoBJ,EAASK,iBAAvE,IACIC,MAAK,aACDC,WAAY,OACZC,OAAQ,YACRC,UAAW,QACRT,EAASI,eAAeE,OALnC,SAOI,qBAAKjB,UAAS,cAASM,EAAc,GAAK,WAAaE,QAASA,EAAhE,SACI,8BACKF,EACI,sBAAKN,UAAU,WAAf,UACG,6BAAKG,EAAKkB,QACV,6BAAKlB,EAAKmB,iBAGb,sBAAKtB,UAAU,SAAf,UACG,6BAAKG,EAAKkB,QACV,6BAAKlB,EAAKmB,cACV,6BAAKnB,EAAKmB,0BArB1BnB,EAAKO,MCyBda,G,MA9BE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMd,EAAS,EAATA,GACtB,OACI,sBAAgBV,UAAU,YAA1B,UACI,oBAAIU,GAAG,QAAP,SAAiBc,EAAKC,OACtB,cAAC,IAAD,CAAWC,YAAchB,EAAzB,SACK,SAACC,EAAUC,GACR,OACI,8CAAKZ,UAAU,aAAgBW,EAASgB,gBAAxC,IAAwDd,IAAKF,EAASG,SACtEG,MAAO,CACHW,WAAYhB,EAASiB,eACnB,YACA,WAJN,UAOKL,EAAKM,MAAMC,KAAI,SAAC5B,EAAMC,GACnB,OACI,8BACI,cAAC,EAAD,CAAMD,KAAMA,EAAMC,MAAOA,KADlBD,EAAKO,OAKvBC,EAASqB,kBAjBUtB,KAF7BA,KCkGJuB,EA7DD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAAY,EACJ9B,mBAAS8B,GADL,mBAC3BC,EAD2B,KAClBC,EADkB,OAEVhC,mBAAS,CAACK,GAAI,IAFJ,mBAE3B4B,EAF2B,KAErBC,EAFqB,KA8ClC,OA1CIL,EAAQxB,KAAO4B,EAAK5B,KACtB6B,EAAQL,GACRM,QAAQC,IAAI,WAAYP,IAG1BQ,qBAAU,WACRF,QAAQC,IAAI,cACZD,QAAQC,IAAIH,GACZK,MAAM,OAAQ,CACZC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUV,KAEtBW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAzB,GACJgB,QAAQC,IAAI,WAAYjB,GACxBa,EAAWb,MAEZ4B,OAAM,SAACC,GACNb,QAAQa,MAAM,SAAUA,QAEzB,CAACf,IAEJI,qBAAU,WACRC,MAAM,UAAW,CACfC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUZ,KAEtBa,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAzB,GACJgB,QAAQC,IAAI,WAAYjB,MAEzB4B,OAAM,SAACC,GACNb,QAAQa,MAAM,SAAUA,QAEzB,CAACjB,IAGA,qBAAKpC,UAAU,QAAf,SACE,cAAC,IAAD,CAAiBsD,UAAW,SAAAC,GAAM,OAtF1B,SAACA,EAAQnB,EAASC,GAClC,GAAKkB,EAAOC,YAAZ,CADiD,IAEzCC,EAAwBF,EAAxBE,OAAQD,EAAgBD,EAAhBC,YAEhB,GAAIC,EAAO/B,cAAgB8B,EAAY9B,YAAa,CAAC,IAAD,EAC5CgC,EAAetB,EAAQqB,EAAO/B,aAC9BiC,EAAavB,EAAQoB,EAAY9B,aACjCkC,EAAW,YAAOF,EAAa5B,OAC/B+B,EAAS,YAAOF,EAAW7B,OAJiB,EAKhC8B,EAAYE,OAAOL,EAAOrD,MAAO,GAA5C2D,EAL2C,oBAMlDF,EAAUC,OAAON,EAAYpD,MAAO,EAAG2D,GACvC1B,EAAW,2BACND,GADK,uBAEPqB,EAAO/B,YAFA,YAAC,eAGJgC,GAHG,IAIN5B,MAAO8B,KAJD,cAMPJ,EAAY9B,YANL,YAAC,eAOJiC,GAPG,IAQN7B,MAAO+B,KARD,SAWL,CACL,IAAMG,EAAS5B,EAAQqB,EAAO/B,aACxBuC,EAAW,YAAOD,EAAOlC,OAF1B,EAGamC,EAAYH,OAAOL,EAAOrD,MAAO,GAA5C2D,EAHF,oBAILE,EAAYH,OAAON,EAAYpD,MAAO,EAAG2D,GACzC1B,EAAW,2BACND,GADK,kBAEPqB,EAAO/B,YAFA,YAAC,eAGJsC,GAHG,IAINlC,MAAOmC,OAIbzB,QAAQC,IAAIL,IAmDkCkB,CAAUC,EAAQnB,EAASC,IAAjE,SACG6B,OAAOC,QAAQ/B,GAASL,KAAI,WAAqB3B,GAAW,IAAD,mBAA7BgE,EAA6B,KAAnBJ,EAAmB,KAC1D,OACE,8BACE,cAAC,EAAD,CAAUxC,KAAOwC,EAAStD,GAAK0D,KADvBA,W,yBCxCXC,EAjDD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAAc,EAChBnE,mBAAS,IADO,mBACnCgB,EADmC,KAC5BoD,EAD4B,OAEJpE,mBAAS,IAFL,mBAEnCiB,EAFmC,KAEtBoD,EAFsB,KAIpChE,EAAKiE,MAaX,OAAKL,EAEEM,IAASC,aAChB,qCACI,qBAAK7E,UAAU,UAAUQ,QAAS+D,IAClC,qBAAKvE,UAAU,QAAf,SACE,iCACA,gCAAO,0CACD,uBACI8E,KAAK,OACLC,UAAQ,EACRC,MAAO3D,EACP4D,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOH,UAGvC,gCAAO,gDACP,0BACID,UAAQ,EACRC,MAAO1D,EACP2D,SAAU,SAACC,GAAD,OAAOR,EAAeQ,EAAEC,OAAOH,UAG7C,wBAAQF,KAAK,SAAStE,QAAS,YAjCtB,SAACa,EAAOC,GACN,IAAjBD,EAAM+D,QAAuC,IAAvB9D,EAAY8D,SAIpCZ,EAAS,CAACnD,QAAOC,cAAa+D,OARnB,EAQ2B3E,OACtC+D,EAAS,IACTC,EAAe,KA2BLY,CAAajE,EAAOC,IADtB,4BAMViE,SAASC,eAAe,WA5BR,MCmBPC,MAnCf,WAAgB,IAAD,EACqBpF,oBAAS,GAD9B,mBACNqF,EADM,KACKC,EADL,OAEqBtF,mBAAS,CAACK,GAAI,IAFnC,mBAENkF,EAFM,KAEKC,EAFL,OAIaxF,mBAAS,MAJtB,mBAIN8B,EAJM,KAIC2D,EAJD,KAeb,OATApD,qBAAU,WACRC,MAAM,QACHM,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACzB,GAELsE,EAAStE,QAEZ,IAGD,qBAAKxB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,sBAAKA,UAAU,UAAf,UACE,wBAAQU,GAAG,UAAUF,QAAS,kBAAMmF,GAAa,IAAO1E,MAAO,CAAC8E,OAAO,KAAvE,wBACA,cAAC,EAAD,CAAOzB,KAAOoB,EAAYnB,QAAS,kBAAMoB,GAAa,IAAQnB,SAAU,SAACrC,GAClD,IAAjBA,EAAMkD,SACRQ,EAAa1D,GACbK,QAAQC,IAAIN,IAEdwD,GAAa,MAEbxD,EAAoB,cAAC,EAAD,CAAOD,QAAU0D,EAAYzD,MAAOA,IAAhD,mBC7BpB6D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFX,SAASC,eAAe,W","file":"static/js/main.8a610eb5.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <h1>KanBoard</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n            </div>\r\n            <div>\r\n            \r\n            </div>\r\n        </nav>\r\n    );\r\n} \r\nexport default Navbar;","import { useState } from 'react';\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport './Task.css';\r\n\r\nconst Task = ({item, index}) => {\r\n    const [showDetails, setShowDetails] = useState(true)\r\n    const onClick = () => setShowDetails(!showDetails)\r\n    \r\n    return (\r\n        <Draggable key={item.id} draggableId={item.id} index={index}>\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} \r\n                        style={{\r\n                            userSelect: \"none\",\r\n                            margin: \"0 0 8px 0\",\r\n                            minHeight: \"50px\",\r\n                            ...provided.draggableProps.style\r\n                    }}>\r\n                        <div className={`task${showDetails ? \"\" : \"-hidden\"}`} onClick={onClick}>\r\n                            <div>\r\n                                {showDetails ? \r\n                                    (<div className=\"collapse\">\r\n                                        <h2>{item.title}</h2>\r\n                                        <h2>{item.description}</h2>\r\n                                    </div>) \r\n                                :\r\n                                    (<div className=\"expand\">\r\n                                        <h2>{item.title}</h2>\r\n                                        <h2>{item.description}</h2>\r\n                                        <h2>{item.description}</h2>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Draggable>\r\n    );\r\n}\r\n \r\nexport default Task;","import Task from \"./Task\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport './TaskList.css';\r\n\r\nconst TaskList = ({ data, id }) => {\r\n    return (\r\n        <div key={ id } className=\"task-list\">\r\n            <h2 id=\"title\">{ data.name }</h2>\r\n            <Droppable droppableId={ id } key={ id }>\r\n                {(provided, snapshot) => {\r\n                    return(\r\n                        <div className='drop-area' {...provided.droppableProps} ref={provided.innerRef} \r\n                        style={{\r\n                            background: snapshot.isDraggingOver\r\n                            ? \"lightblue\"\r\n                            : \"#ebecf0\",\r\n                            }}>\r\n                            {/* {console.log(data.items)} */}\r\n                            {data.items.map((item, index) => {\r\n                                return (\r\n                                    <div key={ item.id }>\r\n                                        <Task item={item} index={index}/>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Droppable>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TaskList;\r\n","import { useEffect, useState } from 'react';\r\nimport './Board.css';\r\nimport TaskList from './TaskList';\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n  if (!result.destination) return;\r\n  const { source, destination } = result;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n    destItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    });\r\n  } else {\r\n    const column = columns[source.droppableId];\r\n    const copiedItems = [...column.items];\r\n    const [removed] = copiedItems.splice(source.index, 1);\r\n    copiedItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems\r\n      }\r\n    });\r\n  }\r\n  console.log(columns)\r\n};\r\n\r\nconst Board = ({ newTask, lists }) => {\r\n    const [columns, setColumns] = useState(lists);\r\n    const [task, setTask] = useState({id: 0});\r\n\r\n    if (newTask.id !== task.id){\r\n      setTask(newTask);\r\n      console.log(\"NEW TASK\", newTask)\r\n    }\r\n\r\n    useEffect(() => {\r\n      console.log(\"Added Task\")\r\n      console.log(task)\r\n      fetch(\"/add\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(task)\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('Success:', data);\r\n        setColumns(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n    }, [task]);\r\n\r\n    useEffect(() => {\r\n      fetch(\"/update\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(columns)\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('Updated:', data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n    }, [columns]);\r\n\r\n    return (\r\n        <div className=\"board\">\r\n          <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)}>\r\n            {Object.entries(columns).map(([columnId, column], index) => {\r\n              return (\r\n                <div key={columnId}>\r\n                  <TaskList data={ column } id={ columnId }/>\r\n                </div>\r\n              )\r\n            })}\r\n          </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Board;","import { useState } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './Modal.css';\r\nimport uuid from \"uuid/v4\";\r\n\r\nconst Modal = ({ open, onClose, onSubmit}) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const submit = 1;\r\n    const id = uuid();\r\n    \r\n    const validateForm = (title, description) => {\r\n      if (title.length === 0 || description.length === 0){\r\n        return\r\n      }\r\n      else{\r\n        onSubmit({title, description, submit, id});\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n      }\r\n    }\r\n    \r\n    if (!open) return null\r\n\r\n    return ReactDom.createPortal(\r\n    <>\r\n        <div className=\"overlay\" onClick={onClose}/>\r\n        <div className=\"modal\">\r\n          <form>\r\n          <label><h2>Title:</h2></label>\r\n                <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                >\r\n                </input>\r\n                <label><h2>Description:</h2></label>\r\n                <textarea \r\n                    required\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                >\r\n                </textarea>\r\n                <button type=\"button\" onClick={() => {\r\n                  validateForm(title, description);\r\n                }}>Submit</button>\r\n          </form>\r\n        </div>\r\n      </>,\r\n      document.getElementById('portal')\r\n    );\r\n}\r\n \r\nexport default Modal;","import Navbar from './Navbar';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Board from './Board';\nimport Modal from './Modal';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [openModal, setOpenModal] = useState(false);\n  const [modalData, setModalData] = useState({id: 0});\n\n  const [lists, setLists] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data)\n        setLists(data)\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <div className=\"content\">\n          <button id=\"addTask\" onClick={() => setOpenModal(true)} style={{zIndex:1000}}>Open Modal</button>\n          <Modal open={ openModal } onClose={() => setOpenModal(false)} onSubmit={(lists) => {\n            if (lists.submit === 1) {\n              setModalData(lists);\n              console.log(lists)\n            }\n            setOpenModal(false);\n          }}/>\n          {!lists ? 'loading' : <Board newTask={ modalData } lists={lists}/>}\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}