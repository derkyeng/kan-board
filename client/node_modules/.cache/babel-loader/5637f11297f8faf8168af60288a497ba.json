{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Desktop\\\\kan-board\\\\src\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './Board.css';\nimport TaskList from './TaskList';\nimport uuid from \"uuid/v4\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: \"First task\"\n}, {\n  id: uuid(),\n  content: \"Second task\"\n}, {\n  id: uuid(),\n  content: \"Third task\"\n}, {\n  id: uuid(),\n  content: \"Fourth task\"\n}, {\n  id: uuid(),\n  content: \"Fifth task\"\n}];\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: \"Requested\",\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: \"To do\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"In Progress\",\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nconst Board = ({\n  newTask\n}) => {\n  _s();\n\n  const [columns, setColumns] = useState(columnsFromBackend);\n  console.log(newTask);\n  let hasMagenicVendor = itemsFromBackend.some(item => item['id'] === newTask.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: Object.entries(columns).map(([columnId, column], index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TaskList, {\n            data: column,\n            id: columnId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)\n        }, columnId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"bYCmdCIiWWb+ZDQE6HV7NzBHfWY=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Derek/Desktop/kan-board/src/Board.js"],"names":["useState","TaskList","uuid","DragDropContext","Draggable","Droppable","itemsFromBackend","id","content","columnsFromBackend","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","Board","newTask","console","log","hasMagenicVendor","some","item","Object","entries","map","columnId"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport './Board.css';\r\nimport TaskList from './TaskList';\r\nimport uuid from \"uuid/v4\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst itemsFromBackend = [\r\n  { id: uuid(), content: \"First task\" },\r\n  { id: uuid(), content: \"Second task\" },\r\n  { id: uuid(), content: \"Third task\" },\r\n  { id: uuid(), content: \"Fourth task\" },\r\n  { id: uuid(), content: \"Fifth task\" }\r\n];\r\n\r\n\r\nconst columnsFromBackend = {\r\n  [uuid()]: {\r\n    name: \"Requested\",\r\n    items: itemsFromBackend\r\n  },\r\n  [uuid()]: {\r\n    name: \"To do\",\r\n    items: []\r\n  },\r\n  [uuid()]: {\r\n    name: \"In Progress\",\r\n    items: []\r\n  },\r\n};\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n  if (!result.destination) return;\r\n  const { source, destination } = result;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n    destItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    });\r\n  } else {\r\n    const column = columns[source.droppableId];\r\n    const copiedItems = [...column.items];\r\n    const [removed] = copiedItems.splice(source.index, 1);\r\n    copiedItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst Board = ({ newTask }) => {\r\n    const [columns, setColumns] = useState(columnsFromBackend);\r\n    console.log(newTask)\r\n    let hasMagenicVendor = itemsFromBackend.some( item => item['id'] === newTask.id)\r\n    return (\r\n        <div className=\"board\">\r\n          <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)}>\r\n            {Object.entries(columns).map(([columnId, column], index) => {\r\n              return (\r\n                <div key={columnId}>\r\n                  <TaskList data={ column } id={ columnId }/>\r\n                </div>\r\n              )\r\n            })}\r\n          </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Board;"]},"metadata":{},"sourceType":"module"}