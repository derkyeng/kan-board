{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Desktop\\\\kan-board\\\\client\\\\src\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ReactDom from 'react-dom';\nimport './Modal.css';\nimport uuid from \"uuid/v4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  open,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const submit = 1;\n  const id = uuid();\n\n  const validateForm = (title, description) => {\n    if (title.length === 0 || description.length === 0) {\n      return;\n    } else {\n      onSubmit({\n        title,\n        description,\n        submit,\n        id\n      });\n      setTitle(\"\");\n      setDescription(\"\");\n    }\n  };\n\n  if (!open) return null;\n  return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            validateForm(title, description);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true), document.getElementById('portal'));\n};\n\n_s(Modal, \"/6NNF0FwJJsXLHIYvDErymUSBps=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/Users/Derek/Desktop/kan-board/client/src/Modal.js"],"names":["useState","ReactDom","uuid","Modal","open","onClose","onSubmit","title","setTitle","description","setDescription","submit","id","validateForm","length","createPortal","e","target","value","document","getElementById"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAgC;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMW,MAAM,GAAG,CAAf;AACA,QAAMC,EAAE,GAAGV,IAAI,EAAf;;AAEA,QAAMW,YAAY,GAAG,CAACN,KAAD,EAAQE,WAAR,KAAwB;AAC3C,QAAIF,KAAK,CAACO,MAAN,KAAiB,CAAjB,IAAsBL,WAAW,CAACK,MAAZ,KAAuB,CAAjD,EAAmD;AACjD;AACD,KAFD,MAGI;AACFR,MAAAA,QAAQ,CAAC;AAACC,QAAAA,KAAD;AAAQE,QAAAA,WAAR;AAAqBE,QAAAA,MAArB;AAA6BC,QAAAA;AAA7B,OAAD,CAAR;AACAJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GATD;;AAWA,MAAI,CAACN,IAAL,EAAW,OAAO,IAAP;AAEX,sBAAOH,QAAQ,CAACc,YAAT,eACP;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,OAAO,EAAEV;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAA,gCACA;AAAA,iCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,gBADA,eAEM;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,QAAQ,MAFZ;AAGI,UAAA,KAAK,EAAEE,KAHX;AAII,UAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBAFN,eASM;AAAA,iCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,gBATN,eAUM;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,KAAK,EAAET,WAFX;AAGI,UAAA,QAAQ,EAAGO,CAAD,IAAON,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAHnC;AAAA;AAAA;AAAA;AAAA,gBAVN,eAgBM;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,MAAM;AACnCL,YAAAA,YAAY,CAACN,KAAD,EAAQE,WAAR,CAAZ;AACD,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADO,EA0BLU,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CA1BK,CAAP;AA4BH,CA/CD;;GAAMjB,K;;KAAAA,K;AAiDN,eAAeA,KAAf","sourcesContent":["import { useState } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './Modal.css';\r\nimport uuid from \"uuid/v4\";\r\n\r\nconst Modal = ({ open, onClose, onSubmit}) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const submit = 1;\r\n    const id = uuid();\r\n    \r\n    const validateForm = (title, description) => {\r\n      if (title.length === 0 || description.length === 0){\r\n        return\r\n      }\r\n      else{\r\n        onSubmit({title, description, submit, id});\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n      }\r\n    }\r\n    \r\n    if (!open) return null\r\n\r\n    return ReactDom.createPortal(\r\n    <>\r\n        <div className=\"overlay\" onClick={onClose}/>\r\n        <div className=\"modal\">\r\n          <form>\r\n          <label><h2>Title:</h2></label>\r\n                <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                >\r\n                </input>\r\n                <label><h2>Description:</h2></label>\r\n                <textarea \r\n                    required\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                >\r\n                </textarea>\r\n                <button type=\"button\" onClick={() => {\r\n                  validateForm(title, description);\r\n                }}>Submit</button>\r\n          </form>\r\n        </div>\r\n      </>,\r\n      document.getElementById('portal')\r\n    );\r\n}\r\n \r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}