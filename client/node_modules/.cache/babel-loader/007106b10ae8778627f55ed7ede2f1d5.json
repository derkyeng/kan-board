{"ast":null,"code":"import _defineProperty from\"C:/Users/Derek/Desktop/kan-board/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/Derek/Desktop/kan-board/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Derek/Desktop/kan-board/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:/Users/Derek/Desktop/kan-board/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{useEffect,useState}from'react';import'./Board.css';import TaskList from'./TaskList';import{DragDropContext}from\"react-beautiful-dnd\";import{jsx as _jsx}from\"react/jsx-runtime\";var _onDragEnd=function onDragEnd(result,columns,setColumns){if(!result.destination)return;var source=result.source,destination=result.destination;if(source.droppableId!==destination.droppableId){var _objectSpread2;var sourceColumn=columns[source.droppableId];var destColumn=columns[destination.droppableId];var sourceItems=_toConsumableArray(sourceColumn.items);var destItems=_toConsumableArray(destColumn.items);var _sourceItems$splice=sourceItems.splice(source.index,1),_sourceItems$splice2=_slicedToArray(_sourceItems$splice,1),removed=_sourceItems$splice2[0];destItems.splice(destination.index,0,removed);setColumns(_objectSpread(_objectSpread({},columns),{},(_objectSpread2={},_defineProperty(_objectSpread2,source.droppableId,_objectSpread(_objectSpread({},sourceColumn),{},{items:sourceItems})),_defineProperty(_objectSpread2,destination.droppableId,_objectSpread(_objectSpread({},destColumn),{},{items:destItems})),_objectSpread2)));}else{var column=columns[source.droppableId];var copiedItems=_toConsumableArray(column.items);var _copiedItems$splice=copiedItems.splice(source.index,1),_copiedItems$splice2=_slicedToArray(_copiedItems$splice,1),_removed=_copiedItems$splice2[0];copiedItems.splice(destination.index,0,_removed);setColumns(_objectSpread(_objectSpread({},columns),{},_defineProperty({},source.droppableId,_objectSpread(_objectSpread({},column),{},{items:copiedItems}))));}console.log(columns);};var Board=function Board(_ref){var newTask=_ref.newTask,lists=_ref.lists;var _useState=useState(lists),_useState2=_slicedToArray(_useState,2),columns=_useState2[0],setColumns=_useState2[1];var _useState3=useState({id:0}),_useState4=_slicedToArray(_useState3,2),task=_useState4[0],setTask=_useState4[1];if(newTask.id!==task.id){setTask(newTask);console.log(\"NEW TASK\",newTask);}useEffect(function(){console.log(\"Added Task\");console.log(task);fetch(\"/add\",{method:\"POST\",headers:{'content-type':'application/json'},body:JSON.stringify(task)}).then(function(res){return res.json();}).then(function(data){console.log('Success:',data);setColumns(data);}).catch(function(error){console.error('Error:',error);});},[task]);useEffect(function(){fetch(\"/update\",{method:\"POST\",headers:{'content-type':'application/json'},body:JSON.stringify(columns)}).then(function(res){return res.json();}).then(function(data){console.log('Updated:',data);}).catch(function(error){console.error('Error:',error);});},[columns]);return/*#__PURE__*/_jsx(\"div\",{className:\"board\",children:/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:function onDragEnd(result){return _onDragEnd(result,columns,setColumns);},children:Object.entries(columns).map(function(_ref2,index){var _ref3=_slicedToArray(_ref2,2),columnId=_ref3[0],column=_ref3[1];return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TaskList,{data:column,id:columnId})},columnId);})})});};export default Board;","map":{"version":3,"sources":["C:/Users/Derek/Desktop/kan-board/client/src/Board.js"],"names":["useEffect","useState","TaskList","DragDropContext","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","splice","index","removed","column","copiedItems","console","log","Board","newTask","lists","id","task","setTask","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","error","Object","entries","map","columnId"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './Board.css';\r\nimport TaskList from './TaskList';\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n  if (!result.destination) return;\r\n  const { source, destination } = result;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n    destItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems\r\n      }\r\n    });\r\n  } else {\r\n    const column = columns[source.droppableId];\r\n    const copiedItems = [...column.items];\r\n    const [removed] = copiedItems.splice(source.index, 1);\r\n    copiedItems.splice(destination.index, 0, removed);\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...column,\r\n        items: copiedItems\r\n      }\r\n    });\r\n  }\r\n  console.log(columns)\r\n};\r\n\r\nconst Board = ({ newTask, lists }) => {\r\n    const [columns, setColumns] = useState(lists);\r\n    const [task, setTask] = useState({id: 0});\r\n\r\n    if (newTask.id !== task.id){\r\n      setTask(newTask);\r\n      console.log(\"NEW TASK\", newTask)\r\n    }\r\n\r\n    useEffect(() => {\r\n      console.log(\"Added Task\")\r\n      console.log(task)\r\n      fetch(\"/add\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(task)\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('Success:', data);\r\n        setColumns(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n    }, [task]);\r\n\r\n    useEffect(() => {\r\n      fetch(\"/update\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(columns)\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('Updated:', data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n    }, [columns]);\r\n\r\n    return (\r\n        <div className=\"board\">\r\n          <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)}>\r\n            {Object.entries(columns).map(([columnId, column], index) => {\r\n              return (\r\n                <div key={columnId}>\r\n                  <TaskList data={ column } id={ columnId }/>\r\n                </div>\r\n              )\r\n            })}\r\n          </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Board;"]},"metadata":{},"sourceType":"module"}