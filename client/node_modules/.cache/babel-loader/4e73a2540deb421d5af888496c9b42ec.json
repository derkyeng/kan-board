{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Desktop\\\\kan-board\\\\src\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './Board.css';\nimport TaskList from './TaskList';\nimport uuid from \"uuid/v4\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = ({\n  newTask,\n  lists,\n  tasks\n}) => {\n  _s();\n\n  let columnsFromBackend = lists;\n  let itemsFromBackend = tasks;\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n\n  console.log(lists, tasks);\n  const [columns, setColumns] = useState(columnsFromBackend);\n  let previousTask = itemsFromBackend.some(item => item['id'] === newTask.id);\n\n  if (!previousTask && newTask.id !== 0) {\n    itemsFromBackend.push(newTask);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: Object.entries(columns).map(([columnId, column], index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TaskList, {\n            data: column,\n            id: columnId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)\n        }, columnId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"bYCmdCIiWWb+ZDQE6HV7NzBHfWY=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Derek/Desktop/kan-board/src/Board.js"],"names":["useState","TaskList","uuid","DragDropContext","Board","newTask","lists","tasks","columnsFromBackend","itemsFromBackend","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","console","log","previousTask","some","item","id","push","Object","entries","map","columnId"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport './Board.css';\r\nimport TaskList from './TaskList';\r\nimport uuid from \"uuid/v4\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nconst Board = ({ newTask, lists, tasks }) => {\r\n  let columnsFromBackend = lists;\r\n  let itemsFromBackend = tasks;\r\n  const onDragEnd = (result, columns, setColumns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n  \r\n    if (source.droppableId !== destination.droppableId) {\r\n      const sourceColumn = columns[source.droppableId];\r\n      const destColumn = columns[destination.droppableId];\r\n      const sourceItems = [...sourceColumn.items];\r\n      const destItems = [...destColumn.items];\r\n      const [removed] = sourceItems.splice(source.index, 1);\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems\r\n        },\r\n        [destination.droppableId]: {\r\n          ...destColumn,\r\n          items: destItems\r\n        }\r\n      });\r\n    } else {\r\n      const column = columns[source.droppableId];\r\n      const copiedItems = [...column.items];\r\n      const [removed] = copiedItems.splice(source.index, 1);\r\n      copiedItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...column,\r\n          items: copiedItems\r\n        }\r\n      });\r\n    }\r\n  };\r\n  \r\n    console.log(lists, tasks);\r\n    const [columns, setColumns] = useState(columnsFromBackend);\r\n    let previousTask = itemsFromBackend.some( item => item['id'] === newTask.id)\r\n    if (!previousTask && newTask.id !== 0){\r\n      itemsFromBackend.push(newTask)\r\n    }\r\n\r\n    return (\r\n        <div className=\"board\">\r\n          <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)}>\r\n            {Object.entries(columns).map(([columnId, column], index) => {\r\n              return (\r\n                <div key={columnId}>\r\n                  <TaskList data={ column } id={ columnId }/>\r\n                </div>\r\n              )\r\n            })}\r\n          </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Board;"]},"metadata":{},"sourceType":"module"}