{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Desktop\\\\kan-board\\\\src\\\\TaskList.js\",\n    _s = $RefreshSig$();\n\nimport Task from \"./Task\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport './TaskList.css';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = ({\n  data,\n  title\n}) => {\n  _s();\n\n  const [tasks, setTasks] = useState(data);\n\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(tasks);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setTasks(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"characters\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"characters\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [tasks.map((note, index) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: note.id.toString(),\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(Task, {\n                  title: note.title,\n                  body: note.body,\n                  author: note.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this)\n            }, note.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this);\n          }), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskList, \"bXxSu/Vsxz9TzH/jofCrFv5zt6E=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["C:/Users/Derek/Desktop/kan-board/src/TaskList.js"],"names":["Task","DragDropContext","Droppable","Draggable","useState","useEffect","TaskList","data","title","tasks","setTasks","handleDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","provided","droppableProps","innerRef","map","note","id","toString","draggableProps","dragHandleProps","body","author","placeholder"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACG,IAAD,CAAlC;;AAEA,QAAMI,aAAa,GAAIC,MAAD,IAAY;AAC9B,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AAEzB,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWP,KAAX,CAAd;AACA,UAAM,CAACQ,aAAD,IAAkBH,KAAK,CAACI,MAAN,CAAaN,MAAM,CAACO,MAAP,CAAcC,KAA3B,EAAkC,CAAlC,CAAxB;AACAN,IAAAA,KAAK,CAACI,MAAN,CAAaN,MAAM,CAACC,WAAP,CAAmBO,KAAhC,EAAuC,CAAvC,EAA0CH,aAA1C;AAEAP,IAAAA,QAAQ,CAACI,KAAD,CAAR;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA,gBAAiBN;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEG,aAA5B;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,YAAvB;AAAA,kBACMU,QAAD,iBACD;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,aAA+BA,QAAQ,CAACC,cAAxC;AAAwD,UAAA,GAAG,EAAED,QAAQ,CAACE,QAAtE;AAAA,qBACKd,KAAK,CAACe,GAAN,CAAU,CAACC,IAAD,EAAOL,KAAP,KAAiB;AAC5B,gCACI,QAAC,SAAD;AAAyB,cAAA,WAAW,EAAEK,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAtC;AAA0D,cAAA,KAAK,EAAEP,KAAjE;AAAA,wBACEC,QAAD,iBACG;AAAI,gBAAA,GAAG,EAAEA,QAAQ,CAACE,QAAlB;AAAA,mBAAgCF,QAAQ,CAACO,cAAzC;AAAA,mBAA6DP,QAAQ,CAACQ,eAAtE;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,KAAK,EAAGJ,IAAI,CAACjB,KAAnB;AAA2B,kBAAA,IAAI,EAAGiB,IAAI,CAACK,IAAvC;AAA8C,kBAAA,MAAM,EAAGL,IAAI,CAACM;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,eAAgBN,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,oBADJ;AASC,WAVA,CADL,EAYKL,QAAQ,CAACW,WAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAtCD;;GAAM1B,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import Task from \"./Task\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport './TaskList.css';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst TaskList = ({ data, title }) => {\r\n    const [tasks, setTasks] = useState(data);\r\n    \r\n    const handleDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(tasks);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n    \r\n        setTasks(items);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"task-list\">\r\n            <h2 id=\"title\">{ title }</h2>\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n                <Droppable droppableId=\"characters\">\r\n                    {(provided) => (\r\n                    <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {tasks.map((note, index) => {\r\n                        return (\r\n                            <Draggable key={note.id} draggableId={note.id.toString()} index={index}>\r\n                            {(provided) => (\r\n                                <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                    <Task title={ note.title } body={ note.body } author={ note.author } />\r\n                                </li>\r\n                            )}\r\n                            </Draggable>\r\n                        );\r\n                        })}\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}